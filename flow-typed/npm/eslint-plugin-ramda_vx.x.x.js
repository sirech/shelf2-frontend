// flow-typed signature: dd52d3d9c8bc4a92454db9f329a443d2
// flow-typed version: <<STUB>>/eslint-plugin-ramda_v^2.0.0/flow_v0.52.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'eslint-plugin-ramda'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'eslint-plugin-ramda' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'eslint-plugin-ramda/rules/any-pass-simplification' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/both-simplification' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/complement-simplification' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/cond-simplification' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/either-simplification' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/filter-simplification' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/if-else-simplification' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/map-simplification' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/merge-simplification' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/no-redundant-and' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/no-redundant-not' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/no-redundant-or' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/prop-satisfies-simplification' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/reduce-simplification' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/reject-simplification' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/set-simplification' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/unless-simplification' {
  declare module.exports: any;
}

declare module 'eslint-plugin-ramda/rules/when-simplification' {
  declare module.exports: any;
}

// Filename aliases
declare module 'eslint-plugin-ramda/index' {
  declare module.exports: $Exports<'eslint-plugin-ramda'>;
}
declare module 'eslint-plugin-ramda/index.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda'>;
}
declare module 'eslint-plugin-ramda/rules/any-pass-simplification.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/any-pass-simplification'>;
}
declare module 'eslint-plugin-ramda/rules/both-simplification.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/both-simplification'>;
}
declare module 'eslint-plugin-ramda/rules/complement-simplification.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/complement-simplification'>;
}
declare module 'eslint-plugin-ramda/rules/cond-simplification.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/cond-simplification'>;
}
declare module 'eslint-plugin-ramda/rules/either-simplification.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/either-simplification'>;
}
declare module 'eslint-plugin-ramda/rules/filter-simplification.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/filter-simplification'>;
}
declare module 'eslint-plugin-ramda/rules/if-else-simplification.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/if-else-simplification'>;
}
declare module 'eslint-plugin-ramda/rules/map-simplification.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/map-simplification'>;
}
declare module 'eslint-plugin-ramda/rules/merge-simplification.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/merge-simplification'>;
}
declare module 'eslint-plugin-ramda/rules/no-redundant-and.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/no-redundant-and'>;
}
declare module 'eslint-plugin-ramda/rules/no-redundant-not.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/no-redundant-not'>;
}
declare module 'eslint-plugin-ramda/rules/no-redundant-or.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/no-redundant-or'>;
}
declare module 'eslint-plugin-ramda/rules/prop-satisfies-simplification.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/prop-satisfies-simplification'>;
}
declare module 'eslint-plugin-ramda/rules/reduce-simplification.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/reduce-simplification'>;
}
declare module 'eslint-plugin-ramda/rules/reject-simplification.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/reject-simplification'>;
}
declare module 'eslint-plugin-ramda/rules/set-simplification.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/set-simplification'>;
}
declare module 'eslint-plugin-ramda/rules/unless-simplification.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/unless-simplification'>;
}
declare module 'eslint-plugin-ramda/rules/when-simplification.js' {
  declare module.exports: $Exports<'eslint-plugin-ramda/rules/when-simplification'>;
}
